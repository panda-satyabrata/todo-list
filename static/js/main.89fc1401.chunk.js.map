{"version":3,"sources":["components/TaskList.js","actions/todolistAction.js","components/AddToDoTask.js","components/ToDoList.js","App.js","serviceWorker.js","reducers/todolistReducer.js","reducers/index.js","index.js"],"names":["TaskList","todos","useSelector","state","dispatch","useDispatch","className","viewBox","style","position","zIndex","opacity","id","gradientUnits","x1","y1","x2","y2","offset","stop-color","stroke","d","cx","cy","r","map","todo","type","value","task","xmlns","xmlnsXlink","class","xlinkHref","name","onClick","event","preventDefault","payload","deleteTask","handleClick","width","height","fill","AddToDoTask","useState","setTask","taskId","length","onSubmit","newTodo","console","log","placeholder","onChange","target","ToDoList","App","Boolean","window","location","hostname","match","todolistInitialState","todolistReducer","action","index","filter","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.89fc1401.chunk.js","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { deleteTask } from \"../actions/todolistAction\";\nimport { useDispatch } from \"react-redux\";\n\nfunction TaskList() {\n  const todos = useSelector((state) => state.todos);\n  const dispatch = useDispatch();\n\n  const handleClick = (event, id) => {\n    event.preventDefault();\n    dispatch(deleteTask(id));\n  };\n\n  return (\n    <div className=\"task-list-container\">\n      <svg\n        viewBox=\"0 0 0 0\"\n        style={{ position: \"absolute\", zIndex: -1, opacity: 0 }}\n      >\n        <defs>\n          <linearGradient\n            id=\"boxGradient\"\n            gradientUnits=\"userSpaceOnUse\"\n            x1=\"0\"\n            y1=\"0\"\n            x2=\"25\"\n            y2=\"25\"\n          >\n            <stop offset=\"0%\" stop-color=\"#27FDC7\" />\n            <stop offset=\"100%\" stop-color=\"#0FC0F5\" />\n          </linearGradient>\n\n          <linearGradient id=\"lineGradient\">\n            <stop offset=\"0%\" stop-color=\"#0FC0F5\" />\n            <stop offset=\"100%\" stop-color=\"#27FDC7\" />\n          </linearGradient>\n\n          <path\n            id=\"todo__line\"\n            stroke=\"url(#lineGradient)\"\n            d=\"M21 12.3h168v0.1z\"\n          ></path>\n          <path\n            id=\"todo__box\"\n            stroke=\"url(#boxGradient)\"\n            d=\"M21 12.7v5c0 1.3-1 2.3-2.3 2.3H8.3C7 20 6 19 6 17.7V7.3C6 6 7 5 8.3 5h10.4C20 5 21 6 21 7.3v5.4\"\n          ></path>\n          <path\n            id=\"todo__check\"\n            stroke=\"url(#boxGradient)\"\n            d=\"M10 13l2 2 5-5\"\n          ></path>\n          <circle id=\"todo__circle\" cx=\"13.5\" cy=\"12.5\" r=\"10\"></circle>\n        </defs>\n      </svg>\n\n      <ul>\n        {todos.map((todo) => (\n          <div className=\"todo-list-wrapper\">\n            <div className=\"todo-list\">\n              <label className=\"todo\">\n                <input\n                  className=\"todo__state\"\n                  type=\"checkbox\"\n                  value={todo.task}\n                />\n\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                  viewBox=\"0 0 200 25\"\n                  class=\"todo__icon\"\n                >\n                  <use xlinkHref=\"#todo__line\" class=\"todo__line\"></use>\n                  <use xlinkHref=\"#todo__box\" class=\"todo__box\"></use>\n                  <use xlinkHref=\"#todo__check\" class=\"todo__check\"></use>\n                  <use xlinkHref=\"#todo__circle\" class=\"todo__circle\"></use>\n                </svg>\n\n                <div class=\"todo__text\">{todo.task}</div>\n\n                <ion-icon name=\"trash-outline\"></ion-icon>\n              </label>\n              <span\n                className=\"delete-button\"\n                onClick={(event) => handleClick(event, todo.id)}\n              >\n                <svg\n                  className=\"delete-icon\"\n                  width=\"52\"\n                  height=\"45\"\n                  viewBox=\"0 0 52 45\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M33.853 11.1123V8.12756C33.853 6.84184 32.6857 5.83164 31.2 5.83164H20.8C19.3143 5.83164 18.1469 6.84184 18.1469 8.12756V11.1123H7.05713V13.8674H10.4L13.053 39.7653C13.1061 40.4541 13.7959 41.0051 14.6449 41.0051H37.4081C38.2571 41.0051 38.9469 40.4541 39 39.7653L41.653 13.8674H45.049V11.1123C45.049 11.1123 33.853 11.1123 33.853 11.1123ZM21.3306 8.58674H30.6694V11.1123H21.3306V8.58674ZM35.9224 38.25H16.0245L13.5306 13.8674H38.3102L35.9224 38.25Z\"\n                    fill=\"url(#paint0_linear)\"\n                  />\n                  <path\n                    d=\"M33.7469 17.9541L30.5632 17.8623L29.8734 34.1633L33.0571 34.2551L33.7469 17.9541Z\"\n                    fill=\"url(#paint1_linear)\"\n                  />\n                  <path\n                    d=\"M22.1265 34.1633L21.4367 17.8623L18.2531 17.9541L18.9428 34.2551L22.1265 34.1633Z\"\n                    fill=\"url(#paint2_linear)\"\n                  />\n                  <path\n                    d=\"M27.5918 17.9082H24.4081V34.2092H27.5918V17.9082Z\"\n                    fill=\"url(#paint3_linear)\"\n                  />\n                  <defs>\n                    <linearGradient\n                      id=\"paint0_linear\"\n                      x1=\"26.053\"\n                      y1=\"3.55868\"\n                      x2=\"26.053\"\n                      y2=\"41.4354\"\n                      gradientUnits=\"userSpaceOnUse\"\n                    >\n                      <stop stop-color=\"#00EFD1\" />\n                      <stop offset=\"1\" stop-color=\"#00ACEA\" />\n                    </linearGradient>\n                    <linearGradient\n                      id=\"paint1_linear\"\n                      x1=\"31.8102\"\n                      y1=\"3.55869\"\n                      x2=\"31.8102\"\n                      y2=\"41.4354\"\n                      gradientUnits=\"userSpaceOnUse\"\n                    >\n                      <stop stop-color=\"#00EFD1\" />\n                      <stop offset=\"1\" stop-color=\"#00ACEA\" />\n                    </linearGradient>\n                    <linearGradient\n                      id=\"paint2_linear\"\n                      x1=\"20.1898\"\n                      y1=\"3.55869\"\n                      x2=\"20.1898\"\n                      y2=\"41.4354\"\n                      gradientUnits=\"userSpaceOnUse\"\n                    >\n                      <stop stop-color=\"#00EFD1\" />\n                      <stop offset=\"1\" stop-color=\"#00ACEA\" />\n                    </linearGradient>\n                    <linearGradient\n                      id=\"paint3_linear\"\n                      x1=\"26\"\n                      y1=\"3.55868\"\n                      x2=\"26\"\n                      y2=\"41.4354\"\n                      gradientUnits=\"userSpaceOnUse\"\n                    >\n                      <stop stop-color=\"#00EFD1\" />\n                      <stop offset=\"1\" stop-color=\"#00ACEA\" />\n                    </linearGradient>\n                  </defs>\n                </svg>\n              </span>\n\n              <br></br>\n            </div>\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TaskList;\n","export const addTask = (todo) => {\n  return {\n    type: \"ADD_TASK\",\n    payload: todo,\n  };\n};\n\nexport const deleteTask = (id) => {\n  return {\n    type: \"DELETE_TASK\",\n    payload: id,\n  };\n};\n\nexport const updateTask = (todo) => {\n  return {\n    type: \"UPDATE_TASK\",\n    payload: todo,\n  };\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTask } from \"../actions/todolistAction\";\n\nfunction AddToDoTask() {\n  const [task, setTask] = useState(\"\");\n  const taskId = useSelector((state) => state.todos.length);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newTodo = {\n      id: taskId + 1,\n      task: task,\n    };\n    console.log(taskId);\n    dispatch(addTask(newTodo));\n    setTask(\"\");\n  };\n\n  return (\n    <div className=\"add-todo-task-container\">\n      <form className=\"task-form\" onSubmit={handleSubmit}>\n        <input\n          className=\"task-input\"\n          type=\"text\"\n          name=\"task-input\"\n          value={task}\n          placeholder=\"What to do today?\"\n          onChange={(event) => setTask(event.target.value)}\n        />\n        <button className=\"add-button\">\n          <svg\n            className=\"add-icon\"\n            width=\"56\"\n            height=\"50\"\n            viewBox=\"0 0 56 50\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M28 0C12.5599 0 0 11.2142 0 25C0 38.7858 12.5599 50 28 50C43.4401 50 56 38.7839 56 25C56 11.2161 43.4401 0 28 0ZM28 46.1271C14.9543 46.1271 4.3377 36.6499 4.3377 25C4.3377 13.3501 14.9543 3.87295 28 3.87295C41.0457 3.87295 51.6623 13.3501 51.6623 25C51.6623 36.6499 41.0479 46.1271 28 46.1271Z\"\n              fill=\"white\"\n            />\n            <path\n              d=\"M38.8575 22.6824H30.1821V14.9365C30.1821 13.8676 29.2126 13 28.0132 13C26.8138 13 25.8443 13.8676 25.8443 14.9365V22.6824H17.1689C15.9695 22.6824 15 23.55 15 24.6189C15 25.6879 15.9695 26.5555 17.1689 26.5555H25.8443V34.3014C25.8443 35.3703 26.8138 36.2379 28.0132 36.2379C29.2126 36.2379 30.1821 35.3703 30.1821 34.3014V26.5555H38.8575C40.0569 26.5555 41.0264 25.6879 41.0264 24.6189C41.0264 23.55 40.0569 22.6824 38.8575 22.6824Z\"\n              fill=\"white\"\n            />\n          </svg>\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddToDoTask;\n","import React from \"react\";\nimport TaskList from \"./TaskList\";\nimport AddToDoTask from \"./AddToDoTask\";\nimport \"./ToDoList.css\";\n\nfunction ToDoList() {\n  return (\n    <div className=\"todolist-app\">\n      <AddToDoTask />\n      <TaskList />\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import React from \"react\";\nimport \"./App.css\";\nimport ToDoList from \"./components/ToDoList\";\n\nfunction App() {\n  return (\n    <>\n      <ToDoList></ToDoList>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const todolistInitialState = [\n  {\n    id: 1,\n    task: \"Be creative!\",\n  },\n];\n\nconst todolistReducer = (state = todolistInitialState, action) => {\n  switch (action.type) {\n    case \"ADD_TASK\":\n      return [...state, action.payload];\n    case \"UPDATE_TASK\":\n      return state.map((todo, index) => {\n        if (todo.id === action.payload.id) {\n          return {\n            ...todo,\n            id: action.payload.id,\n            task: action.payload.task,\n          };\n        }\n        return todo;\n      });\n    case \"DELETE_TASK\":\n      return state.filter((todo, index) => {\n        if (todo.id === action.payload) {\n          return false;\n        }\n        return true;\n      });\n    default:\n      return [...state];\n  }\n};\n\nexport default todolistReducer;\n","import { combineReducers } from \"redux\";\nimport todolistReducer from \"./todolistReducer\";\n\nconst rootReducer = combineReducers({\n  todos: todolistReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers/index\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}